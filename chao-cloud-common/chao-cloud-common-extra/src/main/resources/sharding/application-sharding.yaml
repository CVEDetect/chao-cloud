chao:
  cloud:
    sharding:
      ds-column-map:
        ds0: 1100-1200
        ds1: 1300-1400
      date-strategy: month-2
        
spring:
  shardingsphere:
    datasource:
      names: ds0,ds1
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds0?useSSL=false&characterEncoding=utf-8&autoReconnect=true&serverTimezone=Asia/Shanghai
        username: root
        password: test
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds1?useSSL=false&characterEncoding=utf-8&autoReconnect=true&serverTimezone=Asia/Shanghai
        username: root
        password: test
    sharding:
      default-data-source-name: ds0
    # 水平拆分的数据库（表） 配置分库 + 分表策略 行表达式分片策略
    # 分库策略
      default-database-strategy:
        complex:
          sharding-columns: dqbm
          algorithm-class-name: com.chao.cloud.common.extra.sharding.strategy.DefaultDsShardingAlgorithm
      # 分表策略 其中user为逻辑表 分表主要取决于age字段
      binding-tables:  
      - user,user_item
      tables:
        user:
          actual-data-nodes: ds$->{0..1}.user_20200$->{1..6}
          table-strategy:
            complex:
              sharding-columns: kprq
              algorithm-class-name: com.chao.cloud.common.extra.sharding.strategy.DateShardingAlgorithm
        user_item:
          actual-data-nodes: ds$->{0..1}.user_item_20200$->{1..6}
          table-strategy:
            complex:
              sharding-columns: kprq
              algorithm-class-name: com.chao.cloud.common.extra.sharding.strategy.DateShardingAlgorithm
    #打印执行的数据库以及语句
    props:
      sql:
        show: true